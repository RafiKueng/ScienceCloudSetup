


# we connect to the physics network first
# then connect to the controller host,
# then to the particular machine.
#
# we expect ssh autologin using keyfiles!
#
connection_settings:
    localport:      10022
    targetport:     22
    proxyhost:      rafik@taurus.physik.uzh.ch
    # enter here the name of the controller node,
    # and the (openstack) network on which it can be
    # reached from the proxy machine/host 
    controller_host: saturn
    controller_netw: uzh-only
    # where and how can we reach the target machine
    user:           debian
    target_netw:    net_int
    sshkey1:        "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCipG5ahA0FX+mF7HyzaPaxLVsUY3ImX2N1zcoEhcSJXqYthkF/Rp+Oh2vn6kd+M+gAXtg+XGglzqBWgTf5LRbPc+FZAaZSVo4JVnmxCI5hwdwm0KiBvdU+tbgRAtqaO9yn16lfd6vp/WVlQfjRVc9TpziZboj9E1h/6Tc2M01Ctgd7D1dsR+VM/p8n+1xQWvUZiNjEQRU6nwx+eyhZt+Gcm5ZzwpSXAkX30NKkjGQyrOwpG0KVJvtdf3oiMuajbLPFj4ZgaUF6NSrjX9q1iBjyrCi9G9sWRpIMlFpo8sOVntZSf5zxaIHNQ8AE0xlqiTWAaYTpEGceFoN+2JOcGhU/ rafi.kueng@rk-main"
    sshkey2:        "ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEA05RsJ0sPJq0xAN1mUh0K/cx7ru2lFppPhN9uT1YbejPa6g9PdXxRDnVAcvI87uP3unzHv8KcclliM58Hu8FKDaJ2XgbuIihR6XJRgUgVe7C5hI2pLmkvSRP+TtV892o/4uTRnX3eUxsg89bCUDagEDmFV0+azv4QstfkXdHZQMiegSBIQa6+a7ZeroUgYxKrd0AGkyLeVr2rkyNEMHCX39PGi4SwnmAgrGX2rFSw2E3c+J4I5zzlfu9GTHsXxcJhNgn+eY4WWOAHrAFXnm8rySPqVEExQwYmqQXLewEKEti/mY3Gay6Riewlx5N874JkYX9KhyWXhIsUPGlkgxhUzQ== rafi.kueng@taurus"
    sshkey3:        "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDaeLqq8h7GBc6OveNnIH3rmP0xECIbtxoA4XkiOqUFp35lffQ8P7EHg5AJ4ayMeKyaZoaXXv8VzrBgoKir7U6+p+wIHbZkejHmcQ9+Nuree/zAdk7ptbtg4whLGSO1BG2t0SX2m0icA+47W75vLsbPqCsZtHni/UCGVA7u5euiqmrTnHGcLEUxTT1EqZ8uTDe30Wb3MMPJ8AHIpLtsUCdVK/ctWjzgPhQD0UIhGmpWlsn6c5sMe3pDCIahg0KZJi1PZMaZ/CMYR1tAu6b2AcIZrZ07XWP2oIobt+FS6TLtLj9q4mW+xYSMH/3/1gzyr50VvcpvTir2YXUtD8LHnzsL debian@saturn"


networks:
    internal:       &netInternal
        name:           net_int
        short:          INT
        iprange:        10.0.0.0
        subnet:         255.255.0.0
        sn_pfx:         /16
        gateway:        None
        pool:
            start:     10.0.254.1
            end:       10.0.254.254
    
    external:       &netExternal
        name:           net_ext
        short:          EXT
        iprange:        10.1.0.0
        subnet:         255.255.0.0
        sn_pfx:         /16
        gateway:        10.1.0.1
        pool:
            start:     10.1.254.1
            end:       10.1.254.254

    uzhonly:        &netUzhOnly   # this is predefined
        name:           uzh-only  # this name is fixed
        short:          UZH
#        iprange:        172.23.0.0
#        subnet:         255.255.0.0
#        sn_pfx:         /16

    public:         &netPublic  # this is predefined
        name:           public    # this name is fixed
        short:          PUB
#        iprange:        0.0.0.0
#        subnet:         255.0.0.0
#        sn_pfx:         /16


#
# routers router FROM an external net TO an internal one
#
routers:
    router_ext:
        name:       router_ext
        fromNet:
            <<:     *netPublic
        toNet:
            <<:     *netExternal

            

# servers = actual vm
# sometimes refered as hosts in sources
# but we use 'server' since thats the term in openstack
#
# make sure that the identifier and hostname are the same!
# we name them after moons of saturn for example
servers:
    
    # default settings
    image:      "Debian 9.3"
    sshkeyname: "taurus"
    
    # dummy machine that doesn't exist and does nothing
    none:       &NONE
        host:   none


    # the controller node
    saturn:   &saturn 
        host:   saturn
        flavor: "1cpu-1ram-server"
        secgroup: default
        networks:
            int:
                <<: *netInternal
                ip: 10.0.0.1
            uzh:
                <<: *netUzhOnly


    # webserver / web facing node
    mimas:    &mimas
        host:   mimas
        flavor: "1cpu-4ram-hpc"
        secgroup: default
        networks:
            int:
                <<: *netInternal
                ip: 10.0.1.1
            ext:
                <<: *netExternal
                ip: 10.1.1.1

    # multi server node
    titan:    &titan 
        host:   titan
        flavor: "2cpu-8ram-hpc"
        secgroup: default
        networks:
            int:
                <<: *netInternal
                ip: 10.0.2.1
            uzh:
                <<: *netUzhOnly


    ## worker nodes
    #moon:  &moon
        #host:     'moon-%02s'
        #n_max:    3
        #n_min:    3 # this is not yet implemented!
        #networks:
            #int:
                #<<: *netInternal
                #ip: 10.0.99.%i
                


#
# define the FUNCTIONS.
# one machine can run multiple functions
#
functions:

    # CONTROLLER
    
    ## init is special function that initializes openstack
    ## like networking...
    ## but doesn't setup any machine
    init:       None
    
    # basic controller allows ssh to other machines..
    basiccontroller:
        <<:     *saturn

    #flower:
        #<<:     *saturn
        #port:   8081

    #status-rabbitmq:
        #<<:     *saturn
        #port:   8082

    #redirect-django-admin:
        #<<:     *saturn
        #port:   8083

    #redirect-couchdb-futon:
        #<<:     *saturn
        #port:   8084



    loadbalancer:
        <<:     *mimas
        port:   80


    staticserver:
        <<:     *mimas
        port:   8001
        staticdir: '/srv/spl/static'


        

    couchdbserver:
        <<:     *titan
        #port:  5984
        datadir:'/srv/couchdb'
        user:   'spl'

    rabbitmq:
        <<:     *titan
        user:   rabbituser
        #psw:    rabbitpsw
        vhost:  swlabs
        port:   5672
        #guestpsw: guest1


    splapp:
        <<:     *titan
        port:   8000
        appdir: '/srv/spl'
        
        
    #mariadbserver:
        #<<:     *titan
        #port:   80


    #webserver:
        #<<:     *mimas
        #port:   80


    #mediaserver:
        #<<:     *titan
        #port:   80




        

        
    #worker:
        #<<:     *moon
        #port:   80


#
# this is only a shortcut for easy install
#
functiongroups:
    controller:
        - init
        - basiccontroller
        #- flower
        #- status-rabbitmq
        #- redirect-django-admin
        #- redirect-couchdb-futon
        
    proxyhost:
        - loadbalancer

    mainsrv:
        - couchdbserver
        - rabbitmq
        - splapp
        - staticserver
