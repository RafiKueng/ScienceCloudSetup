


# we connect to the physics network first
# then connect to the controller host,
# then to the particular machine.
#
# we expect ssh autologin using keyfiles!
#
conntection_settings:
    localport:      10022
    targetport:     22
    proxyhost:      rafik@taurus.physik.uzh.ch
    # enter here the name of the controller node,
    # and the (openstack) network on which it can be
    # reached from the proxy machine/host 
    controller:     saturn
    network:        "uzh-only"
    #targethost:     172.23.24.117
    


networks:
    internal:       &netInternal
        name:           net_int
        short:          INT
        iprange:        10.0.0.0
        subnet:         255.255.0.0
        sn_pfx:         /16
        pool_start:     10.0.254.1
        pool_end:       10.0.254.254
    university:     &netUzh
        name:           net_uzh
        short:          UZH
        iprange:        10.1.0.0
        subnet:         255.255.0.0
        sn_pfx:         /16
    external:       &netExternal
        name:           net_ext
        short:          EXT
        iprange:        10.9.0.0
        subnet:         255.255.0.0
        sn_pfx:         /16


# servers = actual vm
# sometimes refered as hosts in sources
# but we use 'server' since thats the term in openstack
#
# make sure that the identifier and hostname are the same!
# we name them after moons of saturn for example
servers:
    
    # default settings
    image:      "Debian 9.2"
    sshkeyname: "taurus"
    
    # dummy machine that doesn't exist and does nothing
    none:       &NONE
        host:   none


    # the controller node
    saturn:   &saturn 
        host:   saturn
        flavor: "1cpu-1ram-server"
        secgroup: default
        networks:
            int:
                <<: *netInternal
                ip: 10.0.0.1
            uzh:
                <<: *netUzh
                ip: 10.1.0.1

    # webserver / web facing node
    mimas:    &mimas
        host:   mimas
        networks:
            int:
                <<: *netInternal
                ip: 10.0.1.1
            ext:
                <<: *netExternal
                ip: 10.2.1.1

    # multi server node
    titan:    &titan 
        host:   titan
        networks:
            int:
                <<: *netInternal
                ip: 10.0.2.1

    # worker nodes
    moon:  &moon
        host:     'moon-%02s'
        n_max:    3
        n_min:    3 # this is not yet implemented!
        networks:
            int:
                <<: *netInternal
                ip: 10.0.99.%i
                


#
# define the FUNCTIONS.
# one machine can run multiple functions
#
functions:

    # CONTROLLER
    
    ## init is special function that initializes openstack
    ## like networking...
    ## but doesn't setup any machine
    init:       None
    
    # basic controller allows ssh to other machines..
    basiccontroller:
        <<:     *saturn

    flower:
        <<:     *saturn
        port:   8081

    status-rabbitmq:
        <<:     *saturn
        port:   8082

    redirect-django-admin:
        <<:     *saturn
        port:   8083

    redirect-couchdb-futon:
        <<:     *saturn
        port:   8084



    loadbalancer:
        <<:     *mimas
        port:   80

    couchdbserver:
        <<:     *titan
        port:   80

    mariadbserver:
        <<:     *titan
        port:   80


    webserver:
        <<:     *mimas
        port:   80

    staticserver:
        <<:     *titan
        port:   80

    mediaserver:
        <<:     *titan
        port:   80


    rabbitmqbroker:
        <<:     *titan
        port:   80


    appserver:
        <<:     *titan
        port:   80
        

        
    worker:
        <<:     *moon
        port:   80


#
# this is only a shortcut for easy install
#
functiongroups:
    controller:
        - flower
        - status-rabbitmq
        - redirect-django-admin
        - redirect-couchdb-futon

